name: 'Fetch Latest Version'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions: write-all

jobs:
  fetch-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install dependencies
        run: |
          make install_dependencies
      - name: Fetch APT repository
        run: |
          curl -fSsL https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor | sudo tee /usr/share/keyrings/google-chrome.gpg >> /dev/null
          echo deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          LATEST_VERSION="$(apt-cache policy google-chrome-stable | grep Candidate | awk '{print $2}')"
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
      - name: Update matrix file
        run: |
          python3 scripts/update_latest.py ${LATEST_VERSION}
      - name: Commit changes
        run: |
          git config --local user.email "NDViet-CI@users.noreply.github.com"
          git config --local user.name "Happy TestOps Robot"
          git commit -m "[ci] Update version ${LATEST_VERSION}" -m "[skip test]" -a || true
          git pull --rebase
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ORG_CI_TOKEN }}
      - name: Read list of versions
        run: |
          echo "OUTPUT_VERSIONS=[\"${LATEST_VERSION}\"]" >> $GITHUB_ENV
      - name: Call workflow archive build
        uses: actions/github-script@main
        with:
          script: |
            const { execSync } = require('child_process');
            const outputVersion = process.env.OUTPUT_VERSIONS;
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'archive-build.yml',
              ref: context.ref,
              inputs: {
                versions: outputVersion
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_CI_TOKEN }}
